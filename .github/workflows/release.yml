on:
  push:
    branches:
      - main

name: Release-Go-iOS
jobs:
  build_on_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Create Release
        id: create_release
        uses: zendesk/action-create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_schema: semantic

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          cache: true

      - name: Build
        run: |
          ((Get-Content -path main.go -Raw) -replace "local-build","${{ steps.create_release.outputs.current_tag }}") | Set-Content -Path main.go  
          mkdir bin
          go build -ldflags="-s -w" -o bin/ios.exe
          "${{ steps.create_release.outputs.current_tag }}" | Out-File -Encoding utf8NoBOM release_tag -NoNewline
          Compress-Archive -Path .\bin\ios.exe, release_tag -CompressionLevel Optimal -DestinationPath go-ios-windows.zip

      - name: upload the windows build
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: go-ios-windows.zip
          retention-days: 1

  build_on_mac:
    runs-on: macos-latest
    needs: build_on_windows
    steps:
      - uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          cache: true

      - name: Download win release from previous job
        uses: actions/download-artifact@v3
        with:
          name: windows-build
          path: ./win-bin

      - name: Extract release tag
        working-directory: ./win-bin
        run: |
          unzip go-ios-windows.zip
          echo "release_tag="$(cat release_tag) >> $GITHUB_ENV

      - name: Build
        run: |
          brew install gnu-sed
          alias sed=gsed
          gsed -i 's/version \= \"local-build\"/version = \"${{ env.release_tag }}\"/' main.go
          mkdir bin
          GOARCH=arm64 go build -ldflags="-s -w" -o bin/ios-arm64
          GOARCH=amd64 go build -ldflags="-s -w" -o bin/ios-amd64
          lipo bin/ios-amd64 bin/ios-arm64 -create -output bin/ios
          zip -j go-ios-mac.zip bin/ios

      - name: upload the macos build
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: go-ios-mac.zip
          retention-days: 1

